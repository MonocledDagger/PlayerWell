@model AgileTeamFour.UI.ViewModels.UserVM

@{
    ViewData["Title"] = "Create";
}

<h1>Create</h1>

<h4>User</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create" method="post" enctype="multipart/form-data" id="userForm">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <label asp-for="User.FirstName" class="control-label"></label>
                <input asp-for="User.FirstName" class="form-control" />
                <span asp-validation-for="User.FirstName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="User.LastName" class="control-label"></label>
                <input asp-for="User.LastName" class="form-control" />
                <span asp-validation-for="User.LastName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="User.UserName" class="control-label"></label>
                <input asp-for="User.UserName" class="form-control" />
                <span asp-validation-for="User.UserName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="User.Password" class="control-label"></label>
                <input asp-for="User.Password" type="password" class="form-control" id="Password" />
                <span asp-validation-for="User.Password" class="text-danger" id="passwordError"></span>
            </div>
            <div class="form-group">
                <label for="ConfirmPassword" class="control-label">Confirm Password</label>
                <input type="password" class="form-control" id="ConfirmPassword" />
                <span class="text-danger" id="confirmPasswordError"></span>
            </div>
            <div class="form-group">
                <label asp-for="User.Email" class="control-label"></label>
                <input asp-for="User.Email" class="form-control" id="Email" />
                <span asp-validation-for="User.Email" class="text-danger" id="emailError"></span>
            </div>
            <div class="form-group">
                <label for="ConfirmEmail" class="control-label">Confirm Email</label>
                <input type="email" class="form-control" id="ConfirmEmail" />
                <span class="text-danger" id="confirmEmailError"></span>
            </div>

            <div class="form-group">
                <label asp-for="User.IconPic" class="control-label"></label>
                <img class="imagepropmedium" alt="User.IconPic" id="programimage" src="~/images/default.jpg" />
                <span asp-validation-for="User.IconPic" class="text-danger"></span>
                <input type="file" name="File" id="File" accept="image/*" onchange="loadFile(event)" />
                <input type="hidden" asp-for="User.IconPic" />
            </div>

            <div class="form-group">
                <label asp-for="User.Bio" class="control-label"></label>
                <input asp-for="User.Bio" class="form-control" />
                <span asp-validation-for="User.Bio" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="User.DateOfBirth" class="control-label"></label>
                <input asp-for="User.DateOfBirth" type="date" class="form-control" />
                <span asp-validation-for="User.DateOfBirth" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}

<script>
    // Image preview script
    var loadFile = function (event) {
        var output = document.getElementById('programimage');
        var fileInput = document.getElementById('File');

        // Display the image
        output.src = URL.createObjectURL(event.target.files[0]);

        // Set the User.IconPic with file's name
        var iconPicField = document.querySelector('input[name="User.IconPic"]');
        iconPicField.value = fileInput.files[0].name;  // Save the file name to User.IconPic
    };

    // Form validation scripts
    document.getElementById('userForm').addEventListener('submit', function (e) {
        let isValid = true;

        // Clear errors
        document.querySelectorAll('.text-danger').forEach(el => el.textContent = '');

        // Confirm the password meets the minimum requirements and matches the confirm password
        const password = document.getElementById('Password').value;
        const confirmPassword = document.getElementById('ConfirmPassword').value;

        if (password.length < 8) {
            isValid = false;
            document.getElementById('passwordError').textContent = 'Password must be at least 8 characters long.';
        }

        if (password !== confirmPassword) {
            isValid = false;
            document.getElementById('confirmPasswordError').textContent = 'Passwords do not match.';
        }

        // Confirm the email address meets the minimum requirements and matches the confirm email
        const email = document.getElementById('Email').value.trim();
        const confirmEmail = document.getElementById('ConfirmEmail').value.trim();
        
        if (email.length < 6) {
        isValid = false;
        document.getElementById('emailError').textContent = 'Email must be at least 6 characters long.';
        }
        if (!email.includes('@@')) {
            isValid = false;
            document.getElementById('emailError').textContent = 'Email must contain an "@@".';
        }
        if (!email.includes('.')) {
            isValid = false;
            document.getElementById('emailError').textContent = 'Email must contain a ".".';
        }
        if (email !== confirmEmail) {
            isValid = false;
            document.getElementById('confirmEmailError').textContent = 'Emails do not match.';
        }

        if (!isValid) e.preventDefault(); // Stop form submission if the validation fails for any reason
    });
</script>
