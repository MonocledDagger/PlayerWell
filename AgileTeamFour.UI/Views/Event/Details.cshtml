@model AgileTeamFour.UI.ViewModels.EventDetailsVM
@* @model AgileTeamFour.BL.Models.Events *@

@{
    ViewData["Title"] = "Details";
}



<div class="container">
    <h1>@Model.Event.EventName</h1>
    <hr />
    
    <dl class="row">
        <div class="col-sm-6">
            <dt class = "">
                @Html.DisplayNameFor(model => model.Event.EventID)
            </dt>
            <dd class = "">
                @Html.DisplayFor(model => model.Event.EventID)
            </dd>

            <dt class="">
                @Html.DisplayNameFor(model => model.Game.GameName)
            </dt>
            <dd class="">
                @Html.DisplayFor(model => model.Game.GameName)
            </dd>

            <dt class = "">
                @Html.DisplayNameFor(model => model.Event.EventName)
            </dt>
            <dd class = "">
                @Html.DisplayFor(model => model.Event.EventName)
            </dd>
            <dt class = "">
                @Html.DisplayNameFor(model => model.Event.Server)
            </dt>
            <dd class = "">
                @Html.DisplayFor(model => model.Event.Server)
            </dd>
            <dt class="">
                @Html.DisplayNameFor(model => model.Event.Description)
            </dt>
            <dd class="">
                @Html.DisplayFor(model => model.Event.Description)
            </dd>
        </div>
        <div class="col-sm-6">
            <dt class="">
                @Html.DisplayNameFor(model => model.currentPlayers)
            </dt>
            <dd class="">
                @Html.DisplayFor(model => model.currentPlayers)
            </dd>
            <dt class = "">
                @Html.DisplayNameFor(model => model.Event.MaxPlayers)
            </dt>
            <dd class = "">
                @Html.DisplayFor(model => model.Event.MaxPlayers)
            </dd>
            <dt class = "">
                @Html.DisplayNameFor(model => model.Event.Type)
            </dt>
            <dd class = "">
                @Html.DisplayFor(model => model.Event.Type)
            </dd>
            <dt class = "">
                @Html.DisplayNameFor(model => model.Event.Platform)
            </dt>
            <dd class = "">
                @Html.DisplayFor(model => model.Event.Platform)
            </dd>
            
            <dt class = "">
                @Html.DisplayNameFor(model => model.Event.DateTime)
            </dt>
            <dd class = "">
                @Html.DisplayFor(model => model.Event.DateTime)
            </dd>
            <dt class="">
                @Html.DisplayNameFor(model => model.AuthorName)
            </dt>
            <dd class="">
                @Html.DisplayFor(model => model.AuthorName)
            </dd>
        </div>
    </dl>
</div>


<hr />
<div class="container">
    <h3> Participants</h3>
    <table class="table table-hover">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.PlayerEvents.First().UserName)
                </th>
            
                <th>
                    @Html.DisplayNameFor(model => model.PlayerEvents.First().Role)
                </th>

                
            </tr>
        </thead>
        <tbody>
            @foreach (var playerEvent in Model.PlayerEvents)
            {
                <tr>
                    <td>
                        @playerEvent.UserName
                    </td>

                    <td>
                        @playerEvent.Role
                    </td>

                    
                </tr>
            }
        </tbody>
    </table>
</div>

<div class="container py-3">
    <h4>Comments</h4>
    @{
        var currentPlayer = Model.PlayerEvents.FirstOrDefault(pe => pe.PlayerID == Model.PlayerID);
        bool isSignedUp = currentPlayer != null;
    }
    <hr />
    <br />
    <ul>
        @foreach (var comment in Model.Comments)
        {
            <li>@comment.Text - @comment.AuthorID</li> 
        }
    </ul>
    @if(isSignedUp)
    {
        <hr />
        <br />
        <form asp-action="AddComment" method="post" asp-controller="Event">
            <label for="comment">Add Comment</label>
            <br />
            <textarea name="CommentText" id="comment" rows="8" cols="75"></textarea>
            <input type="hidden" name="EventID" value="@Model.Event.EventID" />
            <input type="hidden" name="PlayerID" value="@Model.PlayerID" />
            <input type="submit" value="Submit"/>
        </form>
    }
    <hr />
    <div class="container py-3">


        @if (Model.currentPlayers >= Model.Event.MaxPlayers && !isSignedUp)
        {
            <p class="text-danger">This event is full. No more players can sign up.</p>
        }
        else if (isSignedUp)
        {
            <p>You are signed up for this event as a @currentPlayer.Role.</p>
            <form asp-action="LeaveEvent" asp-controller="Event">
                <input type="hidden" name="EventID" value="@Model.Event.EventID" />
                <input type="hidden" name="PlayerID" value="@Model.PlayerID" />
                <button type="submit" class="btn btn-danger">Leave Event</button>
            </form>
        }
        else
        {
            <h4>Sign up for this Event</h4>
            <form asp-action="SignUp" method="post">
                <input type="hidden" name="EventID" value="@Model.Event.EventID" />
                <input type="hidden" name="PlayerID" value="@Model.PlayerID" />

                <div class="form-group">
                    <label for="Role">Role</label>
                    <input type="text" class="form-control" id="Role" name="Role" />
                </div>

                <button type="submit" class="btn btn-primary">Sign Up</button>
            </form>
        }
    </div>
    
    <hr />
</div>
<br />
<div>
    <a class="btn btn-secondary btn-sm ml-3" asp-area="" asp-controller="Event" asp-action="Edit" asp-route-id="@Model.Event.EventID">Edit</a>
    
    <a class="btn btn-secondary btn-sm" asp-action="Index">Back to List</a>
</div>