


@model IEnumerable<AgileTeamFour.BL.Models.Post>

@{
    ViewData["Title"] = "Posts";
}

<h1>@ViewData["Title"]</h1>

<div class="activity-feed">
    <p>
        <a asp-action="Create" class="create-post-link">Create a New Post</a>
    </p>
    @foreach (var item in Model)
    {
        <div class="post-card">
            <div class="user-info">
                <img class="avatar"
                     alt="UserName's Avatar"
                     src="@Url.Content("~/images/" + item.IconPic)"
                     onclick="on('@Url.Content("~/images/" + item.IconPic)')" />
                <a asp-controller="User"
                   asp-action="Details"
                   asp-route-id="@item.AuthorID"
                   class="username">@item.UserName &nbsp</a>
                <span class="time-posted">@item.TimePosted</span>
            </div>
            <p class="post-content">@item.Text</p>

            <div class="rank-info">
                <div class="rating">
                    <div class="summary">
                        <span>What do others think about this user? </span>
                        <br />
                        Rating:
                        <span class="review-stars">
                            @for (var i = 1; i <= 5; i++)
                            {
                                var averageStars = item.AverageStarsOutOf5.GetValueOrDefault(); // Get value or 0 if null

                                if (i <= Math.Floor(averageStars))
                                {
                                    <span class="fa fa-star checked"></span>
                                }
                                else if (i == Math.Ceiling(averageStars) && averageStars % 1 != 0)
                                {
                                    <span class="fa fa-star-half-alt checked"></span>
                                }
                                else
                                {
                                    <span class="fa fa-star unchecked"></span>
                                }
                            }
                        </span>
                        <br />
                        <span class="review-summary">@item.ReviewSummary</span>
                    </div>
                </div>
            </div>








            <div class="post-actions">
                <button class="like-button" onclick="likePost(@item.PostID)">Like</button>
                <button class="comment-button" onclick="toggleCommentSection(@item.PostID)">Comment</button>
                <button class="respond-button">Send a Friend Request</button>
            </div>

            <div class="comment-section">
                <textarea class="comment-input" placeholder="Write a comment..."></textarea>
                <button class="submit-comment" onclick="submitComment(@item.PostID)">Post</button>

                <!-- Render comments using the partial view -->
                <div class="comments-list">
                    @if (item.Comments != null && item.Comments.Any())
                    {
                        @foreach (var comment in item.Comments)
                        {
                            @await Html.PartialAsync("_PostCommentPartial", comment)
                        }
                    }
                </div>
            </div>
            
        </div>
    }
</div>

<script>
    function likePost(postId) {
        // Perform like functionality here
    }

    function toggleCommentSection(postId) {
        var commentSection = document.getElementById('comment-section-' + postId);
        commentSection.style.display = (commentSection.style.display === 'none') ? 'block' : 'none';
    }

    function submitComment(postId) {
        var commentText = document.querySelector('#comment-section-' + postId + ' .comment-input').value;
        // AJAX request to submit the comment (postId, commentText)
    }

    function showReplyForm(commentId) {
        var replyForm = document.getElementById('reply-form-' + commentId);
        replyForm.style.display = 'block';
    }

    function submitReply(postId, parentCommentId) {
        var replyText = document.querySelector('#reply-form-' + parentCommentId + ' .reply-input').value;
        // AJAX request to submit the reply (postId, replyText, parentCommentId)
    }
</script>

<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" />

