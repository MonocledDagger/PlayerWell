@model AgileTeamFour.UI.ViewModels.GuildDetailsVM

@{
    ViewData["Title"] = @Model.Guild.GuildName;
}

@{
    var currentPlayer = Model.PlayerGuilds.FirstOrDefault(pe => pe.PlayerID == Model.PlayerID);
    bool isSignedUp = currentPlayer != null;
    var currentUserId = Model.PlayerID;
}

<h1 class="cinzel-header text-center">@Model.Guild.GuildName</h1>
<br />

    <ul class="nav nav-tabs">
        <li class="nav-item">
            <a class="nav-link active" data-bs-toggle="tab" href="#home">Home Page</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" data-bs-toggle="tab" href="#menu1">Guild Events</a>
        </li>
        <li class="nav-item">
            <a class="nav-link" data-bs-toggle="tab" href="#menu2">Guild Chat</a>
        </li>
        
    </ul>
<div class="container  border p-5 shadow-sm rounded">
    <div class="tab-content">
        <div id="home" class="tab-pane container active">

            <h3 class="pb-3"> Guild Information</h3>
            
            <dl class="row">

               
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.Guild.Description)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.Guild.Description)
                </dd>
                <dt class="col-sm-2">
                    @Html.DisplayNameFor(model => model.LeaderName)
                </dt>
                <dd class="col-sm-10">
                    @Html.DisplayFor(model => model.LeaderName)
                </dd>
            </dl>
            <hr />
            

                

                <h3 class="pb-3"> Members</h3>
                <table class="table table-hover px-3">
                    <thead>
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.PlayerGuilds.First().UserName)
                            </th>


                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var playerGuild in Model.PlayerGuilds)
                        {
                            <tr>
                                <td>
                                    @playerGuild.UserName
                                </td>


                            </tr>
                        }
                    </tbody>
                </table>
                    @if (isSignedUp)
                    {
                        <p class="pt-2">You are a Member of this Guild</p> <br />
                        <form asp-action="InviteGuild" asp-controller="Guild">
                            <input type="hidden" name="GuildId" value="@Model.Guild.GuildId" />
                            <button type="submit" class="btn btn-primary">Invite Player</button>
                            <input type="text" name="PlayerName" value="" placeholder="Enter a Player's Name" />
                        </form>
                        @* Check if there is an error message to display *@
                        @if (TempData["ErrorMessage"] != null)
                        {
                            <div class="alert alert-danger">@TempData["ErrorMessage"]</div>
                        }
                        @* Success message section (optional) *@
                        @if (TempData["SuccessMessage"] != null)
                        {
                            <div class="alert alert-success mt-2">@TempData["SuccessMessage"]</div>
                        }
                        <br />
                        <form asp-action="LeaveGuild" asp-controller="Guild">
                            <input type="hidden" name="GuildId" value="@Model.Guild.GuildId" />
                            <input type="hidden" name="PlayerID" value="@Model.PlayerID" />
                            <button type="submit" class="btn btn-sm btn-danger">Leave Guild</button>
                        </form>
                    }
                    else
                    {
                        <h4>Sign up for this Guild</h4>
                        <form asp-action="SignUp" method="post">
                            <input type="hidden" name="GuildId" value="@Model.Guild.GuildId" />
                            <input type="hidden" name="PlayerID" value="@Model.PlayerID" />


                            <button type="submit" class="btn btn-primary">Sign Up</button>
                        </form>
                    }
                


                <br />
            

            <hr />
            <div class="mt-5">
                
                <a asp-action="Index" class="btn btn-primary">Back to List</a>
                
            </div>
             @if (isSignedUp)
                    {
                
            <div class="mt-3">
            <a asp-action="Edit" class="btn btn-sm btn-secondary" asp-route-id="@Model?.Guild.GuildId">Edit</a>
            <a asp-action="Delete" class="btn-sm btn btn-danger" asp-route-id="@Model?.Guild.GuildId">Delete Guild</a>
            </div>
            
                    }
        </div>



        <div id="menu1" class="tab-pane fade">
            
            
                
                <br />
                
                <h2>Guild Events</h2>
                <hr />

                <div class="row">
                    @if (Model.Events != null)
                    {
                        @foreach (var item in Model.Events)
                        {
                            <div class="col-md-4 hover-shadow">
                                <div class="card mb-4" style="width: 100%;">
                                <img src="" class="card-img-top" alt="">
                                <div class="card-body">
                                    <h5 class="card-title">@Html.DisplayFor(modelItem => item.EventName)</h5>
                                    <p class="card-text">@Html.DisplayFor(modelItem => item.Description)</p>

                                    <a asp-action="Details" asp-controller="Event" asp-route-id="@item.EventID" class="btn btn-primary btn-sm">Details</a>


                                </div>
                            </div>
                        </div>
                    }}
                </div>
            


        </div>

        <!--RGO change chat container to make it look more like a chat add the avatar and Time Posted -->

        <div id="menu2" class="tab-pane fade">
            <div class="container py-3 chat-container">
                <h4>Chat</h4>
                
                <hr />

                <div class="chat-box">
                    <!-- Chat Messages Section -->
                    <ul id="messagesList" class="chat-messages">
                        @foreach (var comment in Model.GuildComments)
                        {
                            var author = @Model.Users.FirstOrDefault(user => comment.AuthorID == user.UserID);
                            var isCurrentUser = comment.AuthorID == currentUserId;
                            <li class="chat-message @(isCurrentUser ? "sent" : "received")">
                                @if (!isCurrentUser)
                                {
                                    <img class="avatar"
                                         alt="@author.UserName's Avatar"
                                         id="programimage"
                                         src="@Url.Content("~/images/" + author.IconPic)"
                                         onclick="on('@Url.Content("~/images/" + author.IconPic)')" />
                                }
                                <div class="message-content">
                                    <span class="message-author">@author.UserName</span>
                                    <p>@comment.Text</p>
                                    <small class="message-timestamp">@comment.TimePosted.ToString("hh:mm tt")</small>
                                </div>
                            </li>


                        }
                    </ul>
                </div>




                @if (isSignedUp)
                {
                    <!-- Chat Input Section -->
                    <div class="chat-input">
                        @*<form id="chatForm" asp-action="AddComment" method="post" asp-controller="Guild" >*@
                        <textarea name="CommentText" id="comment" rows="1" placeholder="Type a message..."></textarea>
                        <input type="hidden" name="GuildId" value="@Model.Guild.GuildId" />
                        <input type="hidden" name="PlayerID" value="@Model.PlayerID" />
                        @{
                            var getUser = @Model.Users.FirstOrDefault(user => user.UserID == Model.PlayerID);
                            string? name = getUser.UserName;
                            string? IconPath = getUser.IconPic;
                            if (name == null) name = "1";
                            int currentUser = @Model.PlayerID;
                        }
                        <input type="hidden" id="userName" value="@name" />
                        <input type="hidden" id="CurrentUser" value="@currentUser" />
                        <input type="hidden" id="iconPath" value="@IconPath" />
                        <button type="submit" id="sendButton" class="btn btn-primary">
                            <i class="fa fa-paper-plane"></i> Send
                        </button>
                        @*</form>*@
                    </div>
                    <!--Scripts needed for SignalR chat function!-->
                    <script src="~/js/signalr/dist/browser/signalr.js"></script>
                    <script src="~/js/chat2.js"></script>
                }


            </div>
        </div>

        
</div>



    
</div>